#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\newcommand{\vestnikonly}[1]{}
\newcommand{\novestnikonly}[1]{#1}
\vestnikonly{
\usepackage{allerree}

\def\wdeb{0}
\usepackage{nameref}
\usepackage{url}
\let\href\undefined
\newcommand{\href}[2]{\url{#1}}

\newcounter{countergvtheorems}

\renewenvironment{lem}
{\refstepcounter{countergvtheorems}\begin{theorem}{Лемма  \arabic{countergvtheorems}.}}
{\end{theorem}\par{\bf Доказательство.}}

\renewenvironment{thm}
{\refstepcounter{countergvtheorems}\begin{theorem}{Теорема \arabic{countergvtheorems}.}}
{\end{theorem}\par{\bf Доказательство.}}

\renewenvironment{defn}
{\par \refstepcounter{countergvtheorems} {\bf Определение \arabic{countergvtheorems}.}}
{\par}
}%\vestnikonly
\novestnikonly{
\newcommand{\iabstract}[4]{
\begin{abstract}
#3
\footnote{\emph{Keywords:} #4}
\end{abstract}
}
}%\novestnikonly


\DeclareMathOperator{\HC}{HC}
\DeclareMathOperator{\HM}{HM}
\DeclareMathOperator{\LCM}{LCM}
\DeclareMathOperator{\poly}{poly}
\DeclareMathOperator{\SIG}{\mathcal{S}}
\end_preamble
\use_default_options true
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 2
\use_esint 0
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth -1
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 0 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\GVWl}{<_{\text{H}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\GVWg}{>_{\text{\textnormal{H}}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\eqdef}{\overset{\mathrm{_{def}}}{=}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\equivdef}{\overset{\mathrm{_{def}}}{\Leftrightarrow}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
novestnikonly{
\end_layout

\end_inset


\end_layout

\begin_layout Title
Simple signature-based Groebner basis algorithm
\end_layout

\begin_layout Author
Galkin Vasily
\begin_inset Newline newline
\end_inset

Moscow State University
\begin_inset Newline newline
\end_inset

email:
\begin_inset CommandInset href
LatexCommand href
target " galkin-vv@yandex.ru"
type "mailto:"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
definitionname}{Definition}
\end_layout

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
lemmaname}{Lemma}
\end_layout

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
theoremname}{Theorem} 
\end_layout

\begin_layout Plain Layout

}%
\backslash
novestnikonly
\end_layout

\begin_layout Plain Layout


\backslash
vestnikonly{
\end_layout

\begin_layout Plain Layout


\backslash
cleanbegin 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
udk{512}
\end_layout

\begin_layout Plain Layout


\backslash
ltitle{ПРОСТОЙ ИТЕРАТИВНЫЙ АЛГОРИТМ ВЫЧИСЛЕНИЯ БАЗИСОВ ГРЁБНЕРА, ОСНОВАННЫЙ
 НА СИГНАТУРАХ} {В.
\backslash
,В.~Галкин
\backslash
footnote[1]{{
\backslash
it Галкин Василий Витальевич} --- асп.
 каф.
 алгебры мех.-мат.
 ф-та МГУ, e-mail: galkin-vv@yandex.ru.}}
\end_layout

\begin_layout Plain Layout

}%
\backslash
vestnikonly
\end_layout

\begin_layout Plain Layout


\backslash
iabstract
\end_layout

\begin_layout Plain Layout

{Данная работа описывает алгоритм вычисления базисов Грёбнера, основанный
 на использовании отмеченных многочленов и идеях из алгоритма F5.
 Отличительными особенностями алгоритма по сравнению с аналогами являются
 простота самого алгоритма и доказательства его корректности, достигнутые
 без потери эффективности.
 Это позволяет создать простую реализацию, не уступающую более сложным аналогам
 по производительности}
\end_layout

\begin_layout Plain Layout

{базис Грёбнера, алгоритм F5, отмеченные многочлены}
\end_layout

\begin_layout Plain Layout

{This paper presents an algorithm for computing Groebner bases based upon
 labeled polynomials and ideas from the algorithm F5.
 The main highlights of this algorithm compared with analogues are simplicity
 both of the algorithm and of the its correctness proof achieved without
 loss of the efficiency.
 This leads to simple implementation which performance is in par with more
 complex analogues} {Groebner basis, F5 algorithm, labeled polynomials}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Consider polynomial ring 
\begin_inset Formula $P=k[x_{1},\dots,x_{n}]$
\end_inset

 over field 
\begin_inset Formula $k$
\end_inset

.
 Also assume that monoid of its monomials 
\begin_inset Formula $\mathbb{T}$
\end_inset

 has a monomial order
\begin_inset Formula $\prec$
\end_inset

.
 A problem asking for a Gröbner basis can be stated for any ideal
\begin_inset Formula $\left(f_{1},\dots,f_{l}\right)$
\end_inset

 in this ring.
 One of the approaches to the problem is using iterative method which computes
 every step a basis for ideal 
\begin_inset Formula $\left(f_{1},\dots,f_{i}\right),i=2\dots l$
\end_inset

 based on the already computed for 
\begin_inset Formula $\left(f_{1},\dots,f_{i-1}\right)$
\end_inset

 basis 
\begin_inset Formula $R_{i-1}$
\end_inset

 and polynomial 
\begin_inset Formula $f_{i}$
\end_inset

.
 The algorithm described in this paper is designed to perform one step of
 such computation.
 So, the algorithm's input data consist of a some polynomial 
\begin_inset Formula $f$
\end_inset

 and a polynomial set referred as 
\begin_inset Formula $\left\{ g_{1},\dots,g_{m}\right\} $
\end_inset

 which is Gröbner basis of ideal 
\begin_inset Formula $I_{0}=\left(g_{1},\dots,g_{m}\right)$
\end_inset

.
 After finishing the algorithm should give the resulting polynomial set
 
\begin_inset Formula $R$
\end_inset

 being a Gröbner basis of ideal 
\begin_inset Formula $I=\left(g_{1},\dots,g_{m},f\right)$
\end_inset

.
 The special cases 
\begin_inset Formula $f=0\Rightarrow I=I_{0}$
\end_inset

 and 
\begin_inset Formula $\exists i\, g_{i}\in k\Rightarrow I=P$
\end_inset

 are not interesting from the computational point of view, so the further
 chapters assume that 
\begin_inset Formula $f\neq0,\forall i\, g_{i}\notin k.$
\end_inset

 The homogeneity of input polynomials is not required unlike the F5 algorithm
 described in 
\begin_inset CommandInset citation
LatexCommand cite
key "FaugereF5"

\end_inset

.
\end_layout

\begin_layout Section
Definitions
\end_layout

\begin_layout Standard
Consider the set
\begin_inset Formula $\mathbb{T}_{0}=\mathbb{T}\cup\left\{ 0\right\} $
\end_inset

 -- the monomial monoid extended by zero.
 The order 
\begin_inset Formula $\prec$
\end_inset

 can be extended to 
\begin_inset Formula $\mathbb{T}_{0}$
\end_inset

 as 
\begin_inset Formula $\prec_{0}$
\end_inset

 with definition 
\begin_inset Formula $\forall t\in\mathbb{T}\, t\succ_{0}0$
\end_inset

 which keeps the well-orderness property.
 The notion of division also can be extended to 
\begin_inset Formula $\mathbb{T}_{0}$
\end_inset

: 
\begin_inset Formula $t_{1}|t_{2}\eqdef\exists t_{3}\, t_{1}t_{3}=t_{2}$
\end_inset

.
 For polynomial 
\begin_inset Formula $p\in P,p\neq0$
\end_inset

 the highest by 
\begin_inset Formula $\prec$
\end_inset

 monom and coefficient are written as 
\begin_inset Formula $\HM(p)\in\mathbb{T}$
\end_inset

 and 
\begin_inset Formula $\HC(p)\in k$
\end_inset

.
 For zero we define: 
\begin_inset Formula $\HM(0)\eqdef0\in\mathbb{T}_{0}$
\end_inset

, 
\begin_inset Formula $\HC(0)\eqdef0\in k$
\end_inset

.
 The least common multiple of 
\begin_inset Formula $t_{1},t_{2}\in\mathbb{T}$
\end_inset

 is written as 
\begin_inset Formula $\LCM(t_{1},t_{2})\in\mathbb{T}$
\end_inset

.
 In the following all definitions are given for fixed 
\begin_inset Formula $I_{0}$
\end_inset

 and 
\begin_inset Formula $f$
\end_inset

:
\end_layout

\begin_layout Definition
The 
\emph on
labeled polynomial
\emph default
 is a pair 
\begin_inset Formula $h=(\sigma,p)\in\mathbb{T}_{0}\times P$
\end_inset

, that satisfies the correctness property: 
\begin_inset Formula $\exists u\in P\,\HM(u)=\sigma,uf\equiv p\pmod{I_{0}}.$
\end_inset

 Some terminology is extended to labeled polynomials.
 The highest monomial is 
\begin_inset Formula $\HM(h)\eqdef\HM(p)$
\end_inset

 and coefficient is 
\begin_inset Formula $\HC(h)\eqdef\HC(p)$
\end_inset

.
 Additionally the 
\emph on
signature
\emph default
 is defined 
\begin_inset Formula $\SIG(h)\eqdef\sigma$
\end_inset

 and a notation is introduced for the polynomial -- second element of pair:
 
\begin_inset Formula $\poly(h)\eqdef p$
\end_inset

.
 The set of all labeled polynomials is written as 
\begin_inset Formula $H\subset\mathbb{T}_{0}\times P$
\end_inset

.
 The trivial examples of labeled polynomials are 
\begin_inset Formula $\left(1,f\right)$
\end_inset

 and 
\begin_inset Formula $\left(0,g\right)$
\end_inset

 for 
\begin_inset Formula $g\in I_{0}$
\end_inset

.
 Another labeled polynomial example is 
\begin_inset Formula $\left(\HM(g),0\right)$
\end_inset

 for 
\begin_inset Formula $g\in I_{0}$
\end_inset

.
 It satisfies correctness property because we can take 
\begin_inset Formula $u$
\end_inset

 equal to 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Lemma
The product of 
\begin_inset Formula $h\in H,t\in\mathbb{T}$
\end_inset

 defined as 
\begin_inset Formula $th\eqdef(t\sigma,tp)\in H,$
\end_inset

 is correct.
\end_layout

\begin_layout Standard
The correctness property is checked by directly finding 
\begin_inset Formula $u$
\end_inset

 for 
\begin_inset Formula $th$
\end_inset

.
\end_layout

\begin_layout Definition
If
\emph on
 
\begin_inset Formula $h'_{1},h_{2}\in H,t\in\mathbb{T}$
\end_inset


\emph default
 satisfy 
\begin_inset Formula $\SIG(h'_{1})\succ_{0}\SIG(th_{2}),\HM(h'{}_{1})=\HM(th{}_{2})\neq0,$
\end_inset

 then exists a 
\emph on
signature-safe reduction 
\begin_inset Formula $h'_{1}$
\end_inset

 by 
\begin_inset Formula $h_{2}$
\end_inset


\emph default
, resulting in labeled polynomial 
\begin_inset Formula $h_{1}\in H$
\end_inset

, equal to: 
\begin_inset Formula 
\[
h_{1}=\left(\SIG(h'_{1}),\poly(h'_{1})+Kt\poly(h_{2})\right),
\]

\end_inset

where the 
\begin_inset Formula $K\in k$
\end_inset

 is selected in a way to perform cancellation of high coefficients, so we
 have 
\begin_inset Formula $\HM(h{}_{1})\prec_{0}\HM(h'{}_{1})$
\end_inset

.
 Such reduction is equivalent to plain reduction with high term cancellation
 extended with requirement for reductor's signature being smaller than the
 signature of labeled polynomial being reduced.
 Like in previous case the correctness check is performed directly.
\end_layout

\begin_layout Standard
Let's introduce a partial order 
\begin_inset Formula $\GVWl$
\end_inset

 on 
\begin_inset Formula $H$
\end_inset

: 
\begin_inset Formula 
\[
h_{1}=(\sigma_{1},p_{1})\GVWl h_{2}=(\sigma_{2},p_{2})\equivdef\HM(p_{1})\sigma_{2}\prec_{0}\HM(p_{2})\sigma_{1}.
\]

\end_inset


\end_layout

\begin_layout Standard
The elements with zero signature or zero high monomial are extremums:
\begin_inset Formula 
\[
\forall\sigma_{1},\sigma_{2},p_{1},p_{2}\,\left(0,p_{1}\right)\not\GVWl\left(\sigma_{2},p_{2}\right),\,\left(\sigma_{1},0\right)\not\GVWg\left(\sigma_{2},p_{2}\right).
\]

\end_inset


\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $h_{1},h_{2}\in H,t\in\mathbb{T}$
\end_inset

.
 Then 
\begin_inset Formula $h_{1}\GVWg h_{2}\Leftrightarrow h_{1}\GVWg th_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Deduced from the fact that multiplying one of the compared labeled polynomials
 by 
\begin_inset Formula $t$
\end_inset

 leads to multiplying by 
\begin_inset Formula $t$
\end_inset

 both sides in the definition of
\begin_inset Formula $\GVWg$
\end_inset

.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $h_{1},h_{2}\in H,\HM(h_{1})|\HM(h_{2}),\HM(h_{2})\neq0$
\end_inset

.
 Then signature-safe reduction 
\begin_inset Formula $h_{2}$
\end_inset

 by 
\begin_inset Formula $h_{1}$
\end_inset

 is possible iff
\begin_inset Formula $h_{1}\GVWg h_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Deduced from the fact that claims of both sides are equivalent to 
\begin_inset Formula $\SIG(h_{2})\succ_{0}\SIG(h_{1})\frac{\HM(h_{2})}{\HM(h_{1})}$
\end_inset

.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $h_{1}\in H$
\end_inset

 be a result of signature-safe reduction of 
\begin_inset Formula $h_{1}'$
\end_inset

 by some other polynomial.
 Then 
\begin_inset Formula $h_{1}\GVWl h_{1}'$
\end_inset

.
\end_layout

\begin_layout Standard
Deduced from equality 
\begin_inset Formula $\SIG(h_{1})=\SIG(h_{1}')$
\end_inset

 and decreasing 
\begin_inset Formula $\HM$
\end_inset

 during reduction: 
\begin_inset Formula $\HM(h_{1})\prec_{0}\HM(h_{1}').$
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:greater-or-smaller"

\end_inset

Let 
\begin_inset Formula $h_{1}\GVWl h_{2}$
\end_inset

 be labeled polynomials.
 Then for 
\begin_inset Formula $\forall h_{3}\in H\setminus\left\{ \left(0,0\right)\right\} $
\end_inset

 at least one of the following two inequalities holds: 
\begin_inset Formula $h_{1}\GVWl h_{3}$
\end_inset

 or 
\begin_inset Formula $h_{3}\GVWl h_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
The lemma clause gives inequality
\begin_inset Formula 
\begin{equation}
\HM(h_{1})\SIG(h_{2})\prec_{0}\HM(h_{2})\SIG(h_{1})\label{eq:gvw-order-3}
\end{equation}

\end_inset

which shows 
\begin_inset Formula $\HM(h_{2})\neq0,\SIG(h_{1})\neq0$
\end_inset

.
 Therefore for the special case 
\begin_inset Formula $\HM(h_{3})=0$
\end_inset

 we get 
\begin_inset Formula $h_{3}\GVWl h_{2}$
\end_inset

and for the case 
\begin_inset Formula $\SIG(h_{3})=0$
\end_inset

 we get 
\begin_inset Formula $h_{1}\GVWl h_{3}$
\end_inset

.
 For remaining generic non-zero case the inequality 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:gvw-order-3"

\end_inset

 can be multiplied by non-zero monomial 
\begin_inset Formula $\HM(h_{3})\SIG(h_{3})$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\HM(h_{3})\SIG(h_{3})\HM(h_{1})\SIG(h_{2})\prec_{0}\HM(h_{3})\SIG(h_{3})\HM(h_{2})\SIG(h_{1}).\label{eq:left-or-right-monom}
\end{equation}

\end_inset

So, the element 
\begin_inset Formula $\HM(h_{3})^{2}\SIG(h_{2})\SIG(h_{1})\in\mathbb{T}_{0}$
\end_inset

 need to be 
\begin_inset Formula $\succ_{0}$
\end_inset

 than left side or 
\begin_inset Formula $\prec_{0}$
\end_inset

 than right side of inequality 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:left-or-right-monom"

\end_inset

, and gives after cancellation one of the inequalities from the lemma statement.
\end_layout

\begin_layout Section
Algorithm
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Input: polynomial set 
\begin_inset Formula $\{g_{1},\dots,g_{m}\}$
\end_inset

 being a Gröbner basis; polynomial 
\begin_inset Formula $f$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Variables: 
\begin_inset Formula $R$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 -- subsets of 
\begin_inset Formula $H$
\end_inset

; 
\begin_inset Formula $(\sigma,p')\in H$
\end_inset

 -- current step's labeled polynomial before reduction; 
\begin_inset Formula $(\sigma,p)$
\end_inset

 -- the same after reduction; 
\begin_inset Formula $r,b$
\end_inset

 -- elements of 
\begin_inset Formula $R$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Result: Gröbner basis of ideal 
\begin_inset Formula $I=\left(g_{1},\dots,g_{m},f\right)$
\end_inset


\end_layout

\begin_layout Paragraph*
\begin_inset CommandInset label
LatexCommand label
name "par:SimpleSignatureGroebner"

\end_inset

SimpleSignatureGroebner
\begin_inset Formula $\left(\left\{ g_{1},\dots,g_{m}\right\} ,f\right)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $R\leftarrow\{\left(\HM(g_{1}),0\right),\left(\HM(g_{2}),0\right),\dots,\left(\HM(g_{m}),0\right),(0,g_{1}),(0,g_{2}),\dots,(0,g_{m})\}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $B\leftarrow\{\}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $(\sigma,p')\leftarrow(1,f)$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
do forever:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:-before-reduce"

\end_inset


\begin_inset Formula $p\leftarrow$
\end_inset

ReduceCheckingSignatures(
\begin_inset Formula $\sigma,p',R$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:-after-reduce"

\end_inset


\begin_inset Formula $R\leftarrow R\cup\left\{ \left(\sigma,p\right)\right\} $
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
if
\series default
 
\begin_inset Formula $p\not=0$
\end_inset


\series bold
:
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
for 
\series default

\begin_inset Formula $\{r\in R\,|\, r\GVWl\left(\sigma,p\right),\HM(r)\neq0\}$
\end_inset


\series bold
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $B\leftarrow B\cup\{\frac{\LCM(\HM(r),\HM(p))}{\HM(r)}r\}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
for 
\series default

\begin_inset Formula $\{r\in R\,|\, r\GVWg\left(\sigma,p\right)\}$
\end_inset


\series bold
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $B\leftarrow B\cup\{\frac{\LCM(\HM(r),\HM(p))}{\HM(p)}\left(\sigma,p\right)\}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:-remove-from-B"

\end_inset


\begin_inset Formula $B\leftarrow B\setminus\{b\in B\,|\,\exists r\in R\, r\GVWl b\wedge\SIG(r)|\SIG(b)\}$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
if 
\begin_inset Formula $B\neq\varnothing$
\end_inset

: 
\series default

\begin_inset Formula $(\sigma,p')\leftarrow$
\end_inset

 element of 
\begin_inset Formula $B$
\end_inset

 with 
\begin_inset Formula $\prec$
\end_inset

-minimal signature
\end_layout

\begin_layout Enumerate

\series bold
else: break
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
return
\series default
 
\begin_inset Formula $\{\poly(r)\,|\, r\in R\}$
\end_inset


\end_layout

\begin_layout Paragraph*
\begin_inset CommandInset label
LatexCommand label
name "par:ReduceCheckingSignatures:"

\end_inset

ReduceCheckingSignatures
\begin_inset Formula $\left(\sigma,p,R\right)$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
do while 
\begin_inset Formula $\exists r\in R\, r\GVWg(\sigma,p)\wedge\HM(r)|\HM(p)$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $p\leftarrow$
\end_inset

signature-safe reduce 
\begin_inset Formula $p$
\end_inset

 by 
\begin_inset Formula $\GVWg$
\end_inset

-maximal element 
\begin_inset Formula $r$
\end_inset

 from the set in cycle clause
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
return
\series default
 
\begin_inset Formula $p$
\end_inset


\end_layout

\begin_layout Lemma
All pairs from 
\begin_inset Formula $\mathbb{T}_{0}\times P$
\end_inset

 appeared in the algorithm are labeled polynomials from 
\begin_inset Formula $H\setminus\left\{ \left(0,0\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
The elements created before entering main cycle are labeled polynomials
 mentioned above as examples.
 All other labeled polynomials in the algorithm are created either with
 multiplication by 
\begin_inset Formula $t\in\mathbb{T}$
\end_inset

 or with signature-safe reduction, so they satisfy the correctness property
 and belongs to 
\begin_inset Formula $H$
\end_inset

.
\end_layout

\begin_layout Standard
The clauses of cycles extending 
\begin_inset Formula $B$
\end_inset

 enforces the absence in
\series bold
 
\series default

\begin_inset Formula $B$
\end_inset

 elements with zero signature or zero highest monomial.
 So, 
\begin_inset Formula $\sigma$
\end_inset

 never can be 0 and the only 
\begin_inset Formula $R$
\end_inset

 elements with zero signatures are 
\begin_inset Formula $(0,g_{1}),...,(0,g_{m}).$
\end_inset

 Any labeled polynomial added to 
\begin_inset Formula $R$
\end_inset

 can have zero highest monomial but 
\begin_inset Formula $R$
\end_inset

 does not contain zero polynomial with zero signature.
\end_layout

\begin_layout Section
Algorithm termination
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:exist-reductor"

\end_inset

At the any moment during the algorithm execution any labeled polynomial
 from 
\begin_inset Formula $B$
\end_inset

 can be signature-safe reduced by some element of 
\begin_inset Formula $R.$
\end_inset


\end_layout

\begin_layout Standard
Labeled polynomials are added to 
\begin_inset Formula $B$
\end_inset

 in a way ensuring existence at least one possible signature-safe reductor.
 The pair 
\begin_inset Formula $(\sigma,p)\in R$
\end_inset

 is such reductor for polynomials added in first 
\series bold
for
\series default
 cycle, and 
\begin_inset Formula $r\in R$
\end_inset

 -- for the polynomials added in the second cycle.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:r-gvw-small"

\end_inset

Before reduction of polynomial 
\begin_inset Formula $p'$
\end_inset

 -- at the step
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-before-reduce"

\end_inset

 of any algorithm iteration -- the signatures of elements
\begin_inset Formula $\left\{ r\in R\,|\, r\GVWl(\sigma,p')\right\} $
\end_inset

 does not divide 
\begin_inset Formula $\sigma$
\end_inset

.
\end_layout

\begin_layout Standard
This holds at the first algorithm iteration because 
\begin_inset Formula $\sigma=1$
\end_inset

 and 
\begin_inset Formula $R$
\end_inset

 does not contain elements with signatures dividing 1.
 This holds during next iterations because the existence such elements in
 
\begin_inset Formula $R$
\end_inset

 would lead to removal 
\begin_inset Formula $\left(\sigma,p'\right)$
\end_inset

 from 
\begin_inset Formula $B$
\end_inset

 during previous iterations at the step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-remove-from-B"

\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:r-gvw-big"

\end_inset

After reduction of 
\begin_inset Formula $p'$
\end_inset

 to 
\begin_inset Formula $p$
\end_inset

 -- at the step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-after-reduce"

\end_inset

 of any algorithm iteration -- the highest monomials of elements 
\begin_inset Formula $\left\{ r\in R\,|\, r\GVWg(\sigma,p)\right\} $
\end_inset

 does not divide 
\begin_inset Formula $\HM(p)$
\end_inset

.
\end_layout

\begin_layout Standard
The cycle in the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:ReduceCheckingSignatures:"

\end_inset

 stops only when it achieves 
\begin_inset Formula $p$
\end_inset

 for which there is no such elements in 
\begin_inset Formula $R$
\end_inset

 .
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:adds-really-new"

\end_inset

After reduction of 
\begin_inset Formula $p'$
\end_inset

 to 
\begin_inset Formula $p$
\end_inset

 -- at the step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-after-reduce"

\end_inset

 of any algorithm iteration -- no one from 
\begin_inset Formula $R$
\end_inset

 elements has simultaneously a highest monomial dividing 
\begin_inset Formula $\HM(p)$
\end_inset

 and a signature dividing 
\begin_inset Formula $\sigma$
\end_inset

.
\end_layout

\begin_layout Standard
The lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:exist-reductor"

\end_inset

 ensures that 
\begin_inset Formula $p'$
\end_inset

is reduced at least once, so 
\begin_inset Formula $(\sigma,p')\GVWg(\sigma,p)$
\end_inset

.
 Now, by lemma
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:greater-or-smaller"

\end_inset

 for 
\begin_inset Formula $\forall r\in R$
\end_inset

 we have 
\begin_inset Formula $r\GVWg(\sigma,p)$
\end_inset

 or 
\begin_inset Formula $r\GVWl(\sigma,p')$
\end_inset

.
 These inequalities allow to apply either lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:r-gvw-small"

\end_inset

 or lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:r-gvw-big"

\end_inset

.
\end_layout

\begin_layout Theorem
The algorithm
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:SimpleSignatureGroebner"

\end_inset

 terminates
\end_layout

\begin_layout Standard
To prove the termination we need to show that all 
\series bold
do
\series default
 cycles stops after finite number of executions.
 In the cycle inside 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:ReduceCheckingSignatures:"

\end_inset

 with non-zero 
\begin_inset Formula $p$
\end_inset

 during every iteration we have 
\begin_inset Formula $\HM(p)$
\end_inset

 decrease according to 
\begin_inset Formula $\prec_{0}$
\end_inset

, which is possible only finite number of times.
 When 
\begin_inset Formula $p$
\end_inset

 becomes zero it stops immediately because of 
\begin_inset Formula $\GVWl$
\end_inset

-minimality of 
\begin_inset Formula $(\sigma,0)$
\end_inset

.
\end_layout

\begin_layout Standard
The set 
\begin_inset Formula $R\subset\mathbb{T}_{0}\times P$
\end_inset

 is extended every step of the main algorithm cycle.
 It can be splitted to 
\begin_inset Formula $R_{*0}\cup R_{0*}\cup R_{**},$
\end_inset

 where 
\begin_inset Formula $R_{*0}\subset\mathbb{T}\times\left\{ 0\right\} ,R_{0*}\subset\left\{ 0\right\} \times P\setminus\left\{ 0\right\} ,R_{**}\subset\mathbb{T}\times P\setminus\left\{ 0\right\} $
\end_inset

.
 
\begin_inset Formula $R_{0*}$
\end_inset

 does never extend because 
\begin_inset Formula $\sigma\neq0$
\end_inset

.
 For sets 
\begin_inset Formula $R_{*0}$
\end_inset

 and 
\begin_inset Formula $R_{**}$
\end_inset

 we apply a method based on idea of monoid ideal introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "KreuzerRobbianoBook1"

\end_inset

 as ``monoideal''.
 Consider the following two sets which are monoideals: 
\begin_inset Formula $L_{*0}=\left(\left\{ \sigma\,|\,(\sigma,0)\in R_{*0}\right\} \right)\subset\mathbb{T}$
\end_inset

 and 
\begin_inset Formula $L_{**}=\left(\left\{ (\sigma,t)\,|\,\exists(\sigma,p)\in R_{**}\, t=\HM(p)\right\} \right)\subset\mathbb{T}\times\mathbb{T}$
\end_inset

.
 Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:adds-really-new"

\end_inset

 shows that elements being added to 
\begin_inset Formula $R$
\end_inset

 expand either 
\begin_inset Formula $L_{*0}$
\end_inset

 or 
\begin_inset Formula $L_{**}$
\end_inset

 in every cycle iteration.
 The monoids 
\begin_inset Formula $\mathbb{T}$
\end_inset

 and 
\begin_inset Formula $\mathbb{T}\times\mathbb{T}$
\end_inset

 are isomorphic to 
\begin_inset Formula $\mathbb{N}^{n}$
\end_inset

 and 
\begin_inset Formula $\mathbb{N}^{2n}$
\end_inset

, so the Dickson's lemma can be applied to their monoideals.
 It states exactly the needed fact -- only finite number of expansions is
 possible for such monoideals.
\end_layout

\begin_layout Section
Correctness of output
\end_layout

\begin_layout Definition

\emph on
S-representation of
\emph default
 
\begin_inset Formula $h\in H$
\end_inset

 over set 
\begin_inset Formula $\left\{ r_{i}\right\} \subset H$
\end_inset

 is an expression 
\begin_inset Formula $\poly(h)=\sum_{j}K_{j}t_{j}\poly(r_{i_{j}}),$
\end_inset

 
\begin_inset Formula $K_{j}\in k,t_{j}\in\mathbb{T},i_{j}\in\mathbb{N}$
\end_inset

, such that 
\begin_inset Formula $\forall j\,\HM(h)\succcurlyeq_{0}\HM(t_{j}r_{i_{j}}),\SIG(h)\succcurlyeq_{0}\SIG(t_{j}r_{i_{j}})$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:one-j-exact"

\end_inset

Let 
\begin_inset Formula $\poly(h)=\sum_{j}K_{j}t_{j}\poly(r_{i_{j}})$
\end_inset

 be S-representation of 
\begin_inset Formula $h$
\end_inset

.
 Then at least one 
\begin_inset Formula $j$
\end_inset

 satisfies 
\begin_inset Formula $\HM(h)=\HM(t_{j}r_{i_{j}})$
\end_inset

.
\end_layout

\begin_layout Standard
To get a 
\begin_inset Formula $j$
\end_inset

 satisfying the equality we can take a value which gives the 
\begin_inset Formula $\succ$
\end_inset

-maximum of 
\begin_inset Formula $\HM(t_{j}r_{i_{j}})$
\end_inset

.
\end_layout

\begin_layout Standard
The next definition extends the notation of S-basis from 
\begin_inset CommandInset citation
LatexCommand cite
key "TheF5Revised"

\end_inset

:
\end_layout

\begin_layout Definition
We call a labeled polynomial set 
\begin_inset Formula $R\subset H$
\end_inset


\emph on
 S-basis
\emph default
 (correspondingly 
\emph on
S
\begin_inset Formula $_{\sigma}$
\end_inset

-basis
\emph default
), if all elements of 
\begin_inset Formula $H$
\end_inset

 (correspondingly 
\begin_inset Formula $\left\{ h\in H\,|\,\SIG(h)\prec_{0}\sigma\right\} $
\end_inset

)
\emph on
 
\emph default
have S-representation over 
\begin_inset Formula $R$
\end_inset


\emph on
.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:s-basis-and-no-reductions"

\end_inset

Let 
\begin_inset Formula $\sigma\succ_{0}0,R=\left\{ r_{i}\right\} $
\end_inset

 be S
\emph on

\begin_inset Formula $_{\sigma}$
\end_inset


\emph default
-basis and 
\begin_inset Formula $h_{1},h_{2}\in H,\SIG(h_{i})=\sigma$
\end_inset

 be labeled polynomials, that can't be signature-safe reduced by 
\begin_inset Formula $R$
\end_inset

 elements.
 Then 
\begin_inset Formula $\HM(h_{1})=\HM(h_{2})$
\end_inset

 and 
\begin_inset Formula $h_{1}$
\end_inset

 has an S-representation over 
\begin_inset Formula $R\cup\left\{ h_{2}\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
We have from the definition of 
\begin_inset Formula $H$
\end_inset

 that 
\begin_inset Formula $\exists u_{i}\in P\,\HM(u_{i})=\sigma,u_{i}f\equiv\poly(h_{i})\pmod{I_{0}},i=1,2.$
\end_inset

 It means that there exists a linear combination of 
\begin_inset Formula $\poly(h_{i})$
\end_inset

 having signature 
\begin_inset Formula $\prec_{0}\sigma$
\end_inset

.
 This can be written as: 
\begin_inset Formula 
\[
\exists K\in k,v\in P\,\HM(v)=\sigma'\prec_{0}\sigma,vf\equiv\poly(h_{1})-K\poly(h_{2})\pmod{I_{0}},
\]

\end_inset

or in the terminology of labeled polynomials: 
\begin_inset Formula $\left(\sigma',p'\right)=\left(\sigma',\poly(h_{1})-K\poly(h_{2})\right)\in H$
\end_inset

.
 From the definition of S
\emph on

\begin_inset Formula $_{\sigma}$
\end_inset


\emph default
-basis and the property 
\begin_inset Formula $\sigma'\prec_{0}\sigma$
\end_inset

 we conclude: 
\begin_inset Formula $\exists r_{j}\in R,t\in\mathbb{T}\,\SIG(tr_{j})\preccurlyeq_{0}\sigma',\HM(tr_{j})=\HM(p')$
\end_inset

.
 So 
\begin_inset Formula $\HM(h_{i})\neq\HM(p'),i=1,2$
\end_inset

, because in the case of equality 
\begin_inset Formula $r_{j}$
\end_inset

 would be signature-safe reductor for 
\begin_inset Formula $h_{i}$
\end_inset

.
 It is possible only if 
\begin_inset Formula $\HM(h_{i})$
\end_inset

 are canceled while subtraction with 
\begin_inset Formula $k$
\end_inset

-coefficient, what means that 
\begin_inset Formula $\HM(h_{1})=\HM(h_{2})$
\end_inset

.
 S-representation of 
\begin_inset Formula $h_{1}$
\end_inset

 is constructed by adding 
\begin_inset Formula $K\poly(h_{2})$
\end_inset

 to S-representation of 
\begin_inset Formula $\left(\sigma',p'\right)$
\end_inset

.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:exist-r-sigma"

\end_inset

Every iteration of the algorithm after step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-remove-from-B"

\end_inset

 the following invariant holds: for 
\begin_inset Formula $\forall\sigma\in\mathbb{T},\sigma\prec$
\end_inset

 signatures of elements of 
\begin_inset Formula $B$
\end_inset

, exists 
\begin_inset Formula $r_{\sigma}\in R,t_{\sigma}\in\mathbb{T}:\SIG(t_{\sigma}r_{\sigma})=\sigma$
\end_inset

 such that 
\begin_inset Formula $t_{\sigma}r_{\sigma}$
\end_inset

 can't be signature-safe reduced by 
\begin_inset Formula $R$
\end_inset

.
\end_layout

\begin_layout Standard
The set 
\begin_inset Formula $R_{\sigma}=\left\{ r\in R\,|\,\SIG(r)|\sigma\right\} $
\end_inset

 is not empty, because contains the element 
\begin_inset Formula $r_{0}$
\end_inset

 added during the first algorithm iteration with 
\begin_inset Formula $\SIG(r_{0})=1$
\end_inset

.
 Let 
\begin_inset Formula $r_{\sigma}$
\end_inset

 be 
\begin_inset Formula $\GVWl$
\end_inset

-minimal element of the set; take 
\begin_inset Formula $t_{\sigma}=\frac{\sigma}{\SIG(r_{\sigma})}$
\end_inset

.
 Suppose that 
\begin_inset Formula $t_{\sigma}r_{\sigma}$
\end_inset

 can be signature-safe reduced by some 
\begin_inset Formula $r_{1}\in R$
\end_inset

.
 This gives that 
\begin_inset Formula $r_{1}\GVWg r_{\sigma}$
\end_inset

 and both sides of inequality are non-zero.
 It means that during the iteration which inserts in 
\begin_inset Formula $R$
\end_inset

 the last of 
\begin_inset Formula $\{r_{\sigma},r_{1}\}$
\end_inset

 the set 
\begin_inset Formula $B$
\end_inset

 was extended by labeled polynomial 
\begin_inset Formula $t'r_{\sigma}$
\end_inset

, where 
\begin_inset Formula $t'=\frac{\LCM(\HM(r_{1}),\HM(r_{\sigma}))}{\HM(r_{\sigma})}$
\end_inset

 and 
\begin_inset Formula $t'|t_{\sigma}$
\end_inset

.
 So we have 
\begin_inset Formula $\SIG(t'r_{\sigma})|\SIG(t_{\sigma}r_{\sigma})=\sigma\Rightarrow\SIG(t'r_{\sigma})\preccurlyeq\sigma\prec$
\end_inset

 signatures of elements of 
\begin_inset Formula $B$
\end_inset

.
 This signatures inequality implies that 
\begin_inset Formula $t'r_{\sigma}$
\end_inset

 can't be element of 
\begin_inset Formula $B$
\end_inset

 during the current iteration and was removed at the step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-remove-from-B"

\end_inset

 of some previous iteration, so 
\begin_inset Formula $\exists r_{2}\in R\, r_{2}\GVWl t'r_{\sigma},\SIG(r_{2})|\SIG(t'r_{\sigma})$
\end_inset

.
 This is impossible, because the existence of 
\begin_inset Formula $r_{2}\GVWl r_{\sigma},r_{2}\in R_{\sigma}$
\end_inset

 contradicts 
\begin_inset Formula $\GVWl$
\end_inset

-minimality of 
\begin_inset Formula $r_{\sigma}$
\end_inset

.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:has-s-repr"

\end_inset

Every iteration of the algorithm after step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-remove-from-B"

\end_inset

 the following invariant holds: 
\begin_inset Formula $\forall h\in H,\SIG(h)\prec$
\end_inset

 signatures of elements of 
\begin_inset Formula $B$
\end_inset

 has S-representation over 
\begin_inset Formula $R$
\end_inset

.
\end_layout

\begin_layout Standard
Suppose that invariant breaks during some algorithm iteration and take the
 
\begin_inset Formula $\prec_{0}$
\end_inset

-minimal 
\begin_inset Formula $\sigma$
\end_inset

 that has non-empty corresponding set 
\begin_inset Formula $V_{\sigma}\eqdef\{h\in H\,|\, h\mbox{ breaks invariant},\SIG(h)=\sigma\}$
\end_inset

.
 Then 
\begin_inset Formula $R$
\end_inset

 is S
\emph on

\begin_inset Formula $_{\sigma}$
\end_inset


\emph default
-basis.
 
\begin_inset Formula $\forall g\in I_{0}\,\left(0,g\right)$
\end_inset

 has S-representation over 
\begin_inset Formula $\{(0,g_{1}),...,(0,g_{m})\}\subset R$
\end_inset

, so 
\begin_inset Formula $\sigma\succ_{0}0$
\end_inset

.
 Select 
\begin_inset Formula $v_{\sigma}$
\end_inset

 -- one of the 
\begin_inset Formula $V_{\sigma}$
\end_inset

 elements with 
\begin_inset Formula $\prec_{0}$
\end_inset

-minimal 
\begin_inset Formula $\HM$
\end_inset

.
 It can't be signature-safe reduced by 
\begin_inset Formula $R$
\end_inset

 because the reduction result 
\begin_inset Formula $v_{1}$
\end_inset

 would be element of
\begin_inset Formula $V_{\sigma}$
\end_inset

 with 
\begin_inset Formula $\HM(v_{1})\prec_{0}\HM(v_{\sigma})$
\end_inset

.
 Take 
\begin_inset Formula $w_{\sigma}\eqdef t_{\sigma}r_{\sigma}$
\end_inset

 from the invariant of theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:exist-r-sigma"

\end_inset

 and apply lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:s-basis-and-no-reductions"

\end_inset

 to 
\begin_inset Formula $v_{\sigma},w_{\sigma}$
\end_inset

 and 
\begin_inset Formula $R$
\end_inset

.
 The lemma says that 
\begin_inset Formula $v_{\sigma}$
\end_inset

 has S-representation over 
\begin_inset Formula $R\cup\{w_{\sigma}\}$
\end_inset

.
 All entries of 
\begin_inset Formula $w_{\sigma}$
\end_inset

 in the representation can be replaced by 
\begin_inset Formula $t_{\sigma}r_{\sigma}$
\end_inset

 to acquire S-representation of
\begin_inset Formula $v_{\sigma}$
\end_inset

 over 
\begin_inset Formula $R$
\end_inset

 only.
 It's existence leads to contradiction.
\end_layout

\begin_layout Lemma
If 
\begin_inset Formula $R$
\end_inset

 is S-basis, then 
\begin_inset Formula $\{\poly(r)\,|\, r\in R\}$
\end_inset

 is a Gröbner basis of ideal 
\begin_inset Formula $I$
\end_inset

.
\end_layout

\begin_layout Standard
For 
\begin_inset Formula $\forall p\in I$
\end_inset

 we can take some 
\begin_inset Formula $h=\left(\sigma,p\right)\in H$
\end_inset

 and apply lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:one-j-exact"

\end_inset

 to it.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:SimpleSignatureGroebner"

\end_inset

 returns Gröbner basis
\end_layout

\begin_layout Standard
At the moment of algorithm termination 
\begin_inset Formula $B=\varnothing$
\end_inset

 so by theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:has-s-repr"

\end_inset

 
\begin_inset Formula $R$
\end_inset

 is S-basis.
\end_layout

\begin_layout Section
Comparison with other algorithms
\end_layout

\begin_layout Standard
The presented algorithm belongs to the family of the Gröbner basis algorithms
 using signatures and being at some degree a modification of F5 algorithm
 from 
\begin_inset CommandInset citation
LatexCommand cite
key "FaugereF5"

\end_inset

.
 One of the main modification directions of F5 is simplifying and clarifying
 the connected theory usually bound with some thoughts about extending the
 area of inputs the algorithm can be applied to.
 Investigations in this direction can be found in 
\begin_inset CommandInset citation
LatexCommand cite
key "GermanF5Proof,ZobninGeneralization,F5InBBStyle"

\end_inset

.
 The other direction is improving efficiency of computations by introducing
 criteria to detect and don't perform some unnecessary computations.
 It is studied in 
\begin_inset CommandInset citation
LatexCommand cite
key "F5C,G2V,SignatureBasedGBs"

\end_inset

 and allows to perform computations in a way that reduces to the end only
 polynomials that are either new S-basis entries or corresponds to extending
 monoideal of signatures known to be zero polynomial signatures -- called
 
\emph on
syzygy signatures.

\emph default
 Generalization simultaneously using all criteria described in algorithms
 TRB-MJ and SB 
\begin_inset CommandInset citation
LatexCommand cite
key "HuangConception,PracticalGB"

\end_inset

 achieve even more efficiency because all discardings are performed before
 any computational heavy operations like polynomial reduction or computation
 highest monomial of S-polynomial -- so the non-trivial computations are
 never become unnecessary because their results are never discarded.
\end_layout

\begin_layout Standard
All mentioned algorithms including original F5 use discarding criteria of
 two types: syzygy-based criteria and rewrite-like criteria, with separate
 proof of correctness for each type.
 The other common idea used in the algorithms are S-polynomials: even the
 algorithms that does not deal with S-polynomials directly make heavy usage
 of them in the correctness proof.
\end_layout

\begin_layout Standard
This paper describes an algorithm computing minimal S-basis and discarding
 computations with efficiency identical to TRB-MJ, but using the only one
 discarding criteria in step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:-remove-from-B"

\end_inset

, which is based on 
\begin_inset Formula $\GVWl$
\end_inset

-ordering of 
\begin_inset Formula $R$
\end_inset

.
 The routine 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:ReduceCheckingSignatures:"

\end_inset

 can use different reductor selection strategies and their efficiency is
 open question.
 The method proposed in this paper is based on the same ordering of 
\begin_inset Formula $R$
\end_inset

 and is identical for homogeneous case with the methods used in original
 F5.
 The correctness proof is given without the use of S-polynomials and is
 formulated in a way that allows to apply the clear algebraic interpretation
 of signature-based algorithms from 
\begin_inset CommandInset citation
LatexCommand cite
key "ZobninGeneralization"

\end_inset

 to the presented algorithm.
\end_layout

\begin_layout Standard
Algorithm simplification lead to simplification of programming its implementatio
n and debugging.
 It is achieved by the smaller number of objects involved in computation
 and use of the same order for discarding criteria and reductor selection.
 Simplicity of implementation and the absence of complex data structures
 allows quick algorithm integration with any computer algebra system that
 can work with polynomials.
 The author's implementation linked below was written from scratch in a
 8 hours what is a lot smaller than the time author spent implementing other
 algorithms with a similar tools.
\end_layout

\begin_layout Standard
The algorithm was implemented in C++ using low-level functions from computer
 algebra system Singular 3-1-4 and open source codes of C.
 Eder (one of the authors of 
\begin_inset CommandInset citation
LatexCommand cite
key "SignatureBasedGBs"

\end_inset

) for implementing F5-like algorithms in this system.
 The source is contained in 
\begin_inset Quotes eld
\end_inset

ssg
\begin_inset Quotes erd
\end_inset

 function in a file available at 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/galkinvv/Singular-f5-like/blob/ssg/kernel/kstd2.cc"

\end_inset


\end_layout

\begin_layout Standard
Comparison of SimpleSignatureGroebner implementation with other Gröbner
 basis algorithms implemented by C.
 Eder gives practical checks for the following theoretical facts:
\end_layout

\begin_layout Itemize
algorithm SimpleSignatureGroebner correctly computes Gröbner basis;
\end_layout

\begin_layout Itemize
the number of polynomials in the result set is not greater than the number
 of polynomials in a result of other incremental algorithms that compute
 S-basis;
\end_layout

\begin_layout Itemize
the execution time is not greater than execution time of other signature-based
 incremental algorithms.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vestnikonly{
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
spisoklit
\end_layout

\begin_layout Plain Layout


\backslash
small
\backslash
wrefdef{11}
\end_layout

\begin_layout Plain Layout


\backslash
wref{1}{Faug
\backslash
`{e}re J.-C.} A new efficient algorithm for computing Gr
\backslash
"{o}bner bases without reduction to zero (F5) // Proceedings of the 2002
 International Symposium on Symbolic and Algebraic Computation.
 ACM.
 New York.
 2002.
 75--83.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{2}{Kreuzer M., Robbiano L.} Computational commutative algebra.
 1 // Springer-Verlag.
 Berlin.
 2000.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{3}{Arri A., Perry J.} The F5 criterion revised // Journal of Symbolic
 Computation.
 2011.
 {
\backslash
bf46}, 
\backslash
No~9.
 1017--1029.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{4}{Герман О.} Доказательство критерия Фожера для алгоритма F5 // Математичес
кие заметки.
 2010.
 {
\backslash
bf88}, 
\backslash
No~4.
 502--510.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{5}{Зобнин А.} Обобщение алгоритма F5 вычисления базиса Грёбнера полиномиальн
ых идеалов // Программирование.
 2009.
 
\backslash
No~2.
 21--30.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{6}{Sun, Y., Wang, D.} The F5 algorithm in Buchberger’s style // Journal
 of Systems Science and Complexity.
 2011.
 {
\backslash
bf24}, 
\backslash
No~6.
 1218--1231.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{7}{Gao S., Guan Y., Volny F.} A new incremental algorithm for computing
 Gr
\backslash
"{o}bner bases // Proceedings of the 2010 International Symposium on Symbolic
 and Algebraic Computation.
 ACM.
 New York.
 2010.
 13--19.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{8}{Eder C., Perry J.} Signature-based algorithms to compute Gr
\backslash
"{o}bner bases // Proceedings of the 36th International Symposium on Symbolic
 and Algebraic Computation.
 ACM.
 New York.
 2011.
 99--106.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{9}{Eder C., Perry J.} F5C: A variant of Faug
\backslash
`{e}re's F5 algorithm with reduced Gr
\backslash
"{o}bner bases // Journal of Symbolic Computation.
 2010.
 {
\backslash
bf45}, 
\backslash
No~12.
 1442--1458.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{10}{Huang L.} A new conception for computing Gr
\backslash
"{o}bner basis and its applications // депонировано: 
\backslash
href{http://arxiv.org/abs/1012.5425v2}{}.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
wref{11}{Roune B., Stillman M.} Practical Gr
\backslash
"{o}bner basis computation // Proceedings of the 2012 International Symposium
 on Symbolic and Algebraic Computation.
 ACM.
 New York.
 2012.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
lend
\end_layout

\begin_layout Plain Layout

}%
\backslash
vestnikonly
\end_layout

\begin_layout Plain Layout


\backslash
novestnikonly{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "f5_references"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}%
\backslash
novestnikonly
\end_layout

\end_inset


\end_layout

\end_body
\end_document
